# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BpNi8WRqy2EfTR4K_bVMQ3-rkptgsTNN
"""

import time
import random
import matplotlib.pyplot as plt
def binary_search(arr, target, low, high):
    if low > high:
        return -1

    mid = (low + high) // 2
    if arr[mid] == target:
        return mid
    elif arr[mid] > target:
        return binary_search(arr, target, low, mid - 1)
    else:
        return binary_search(arr, target, mid + 1, high)

def time_binary_search(n):
    arr = sorted(random.sample(range(1, 10*n), n))
    target = random.choice(arr)
    start_time = time.time()
    binary_search(arr, target, 0, n - 1)
    end_time = time.time()
    return end_time - start_time
times = []
sizes = []
for n in range(100, 1001, 100):
    time_taken = time_binary_search(n)
    times.append(time_taken)
    sizes.append(n)
plt.figure(figsize=(10, 6))
plt.plot(sizes, times, marker='o', linestyle='-', color='r')
plt.title("Recursive Binary Search Time Complexity")
plt.xlabel("Number of Elements (n)")
plt.ylabel("Time Taken (seconds)")
plt.grid(True)
plt.show()